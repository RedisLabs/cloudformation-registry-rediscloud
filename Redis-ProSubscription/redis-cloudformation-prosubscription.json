{
  "typeName": "Redis::CloudFormation::ProSubscription",
  "description": "CloudFormation template for Pro Subscription.",
  "tagging": {
    "taggable": false
  },
  "typeConfiguration": {
    "properties": {
        "RedisAccess": {
            "$ref": "#/definitions/RedisAccess"
        }
    },
    "additionalProperties": false,
    "required": [
        "RedisAccess"
    ]
},
"definitions": {
        "RedisAccess": {
            "description": "Properties needed to access Redis.",
            "type": "object",
            "properties": {
                "xapikey": {
                    "description": "x_api_key",
                    "type": "string"
                },
                "xapisecretkey": {
                    "description": "x_api_secret_key",
                    "type": "string"
                }
            },
            "additionalProperties": false
        }
    },
  "properties": {
    "SubscriptionID": {
      "type": "string",
      "description": "Subscription ID. Populated with value within the handlers.py.",
      "default": "Overwrite this value"
    },
    "BaseUrl": {
      "type": "string",
      "description": "[Required]. The Base URL where the API calls are sent."
    },
    "SubscriptionName": {
      "type": "string",
      "description": "[Optional]. Subscription name. Example: My new subscription"
    },
    "DryRun": {
      "type": "string",
      "description": "[Optional]. When 'false': Creates a deployment plan and deploys it (creating any resources required by the plan). When 'true': creates a read-only deployment plan without any resource creation. Example: false. Default: 'false'."
    },
    "DeploymentType": {
      "type": "string",
      "description": "[Optional]. Creates a single region subscription. Example: single-region"
    },
    "PaymentMethod": {
      "type": "string",
      "description": "[Optional]. Payment method for the requested subscription. If credit card is specified, the payment method Id must be defined. Default: 'credit-card'"
    },
    "PaymentMethodId": {
      "type": "string",
      "description": "[Optional]. A valid payment method that was pre-defined in the current account. This value is Optional if 'paymentMethod' is 'marketplace', but Required for all other account types."
    },
    "MemoryStorage": {
      "type": "string",
      "description": "[Optional]. Optional. Memory storage preference: either 'ram' or a combination of 'ram-and-flash'. Example: ram. Default: 'ram'"
    },
    "Provider": {
      "type": "string",
      "description": "[Optional]. Cloud provider. Example: AWS. Default: 'AWS'"
    },
    "CloudAccountId": {
      "type": "string",
      "description": "[Optional]. Cloud account identifier. Default: Redis internal cloud account (using Cloud Account Id = 1 implies using Redis internal cloud account). Note that a GCP subscription can be created only with Redis internal cloud account.Example: 1. Default: 1"
    },
    "Region": {
      "type": "string",
      "description": "[Required]. Deployment region as defined by cloud provider. Example: us-east-1"
    },
    "MultipleAvailabilityZones": {
      "type": "string",
      "description": "[Optional]. Support deployment on multiple availability zones within the selected region. Example: false. Default: 'false'"
    },
    "PreferredAvailabilityZones": {
      "type": "string",
      "description": "[Optional]. Availability zones deployment preferences (for the selected provider & region). If 'multipleAvailabilityZones' is set to 'true', you must specify three availability zones. In AWS Redis internal cloud account, set the zone IDs (for example: ['use-az2', 'use-az3', 'use-az5'])"
    },
    "DeploymentCIDR": {
      "type": "string",
      "description": "[Required]. Deployment CIDR mask. Example: 10.0.0.0/24. Default: If using Redis internal cloud account, 192.168.0.0/24"
    },
    "VpcId": {
     "type": "string",
     "description": "[Optional]. Either an existing VPC Id (already exists in the specific region) or create a new VPC (if no VPC is specified). VPC Identifier must be in a valid format (for example: 'vpc-0125be68a4625884ad') and existing within the hosting account"
    },
    "DatabaseName": {
      "type": "string",
      "description": "[Required]. Database name (Database name must be up to 40 characters long, include only letters, digits, or hyphen ('-'), start with a letter, and end with a letter or digit). Example: Redis-database-example"
    },
    "Protocol": {
      "type": "string",
      "description": "[Optional]. Database protocol: either 'redis' or 'memcached'. Default: 'redis'"
    },
    "DatasetSizeInGb": {
      "type": "string",
      "description": "[Optional]. The maximum amount of data in the dataset for this specific database is in GB. You can not set both datasetSizeInGb and totalMemoryInGb. if 'replication' is true, the database's total memory will be twice as large as the datasetSizeInGb.if 'replication' is false, the database's total memory of the database will be the datasetSizeInGb value. Minimum: 0.1. ExclusiveMinimum: false. Example: 1"
    },
    "SupportOSSClusterApi": {
      "type": "string",
      "description": "[Optional]. Support Redis open-source (OSS) Cluster API. Default: 'false'"
    },
    "DataPersistence": {
      "type": "string",
      "description": "[Optional]. Rate of database data persistence (in persistent storage). Example: none. Default: 'none'"
    },
    "Replication": {
      "type": "string",
      "description": "[Optional]. Databases replication. Default: 'true'"
    },
    "By": {
      "type": "string",
      "description": "[Required to enable throughputMeasurement]. Throughput measurement method. Either 'number-of-shards' or 'operations-per-second'"
    },
    "Value": {
      "type": "string",
      "description": "[Required to enable throughputMeasurement]. Throughput value (as applies to selected measurement method). Example: 10000"
    },
    "LocalThroughputMeasurementRegion": {
      "type": "string"
    },
    "WriteOperationsPerSecond": {
      "type": "string",
      "description": "[Optional]. Example: 1000. Default: 1000 ops/sec"
    },
    "ReadOperationsPerSecond": {
      "type": "string",
      "description": "[Optional]. Example: 1000. Default: 1000 ops/sec"
    },
    "ModuleName": {
      "type": "string",
      "description": "[Required only to enable modules]. Redis module Id"
    },
    "ModuleParameters": {
      "type": "string",
      "description": "[Optional]. Redis database module parameters (name and value), as relevant to the specific module (see modules parameters specification). Example: OrderedMap {}"
    },
    "Quantity": {
      "type": "string",
      "description": "[Optional]. Number of databases (of this type) that will be created. Default: 1"
    },
    "AverageItemSizeInBytes": {
      "type": "string",
      "description": "[Optional]. Relevant only to ram-and-flash clusters. Estimated average size (measured in bytes) of the items stored in the database. Default: 1000"
    },
    "RespVersion": {
      "type": "string",
      "description": "[Optional]. RESP version must be compatible with Redis version. Example: resp3. Allowed values: resp2/resp3."
    },
    "QueryPerformanceFactor": {
      "type": "string",
      "description": "[Optional]. Query performance factor. Example: 2x"
    },
    "RedisVersion": {
      "type": "string",
      "description": "[Optional]. If specified, the redisVersion defines the Redis version of the databases in the subscription. If omitted, the Redis version will be the default (available in 'GET /subscriptions/redis-versions'). Example: 7.2. Default = 'default'"
    }
  },
  "handlers": {
    "create": {
        "permissions": []
    },
    "read": {
        "permissions": [
          "initech:DescribeReport"
        ]
    },
    "update": {
        "permissions": [
          "initech:UpdateReport"
        ]
    },
    "delete": {
        "permissions": []
    },
    "list": {
        "permissions": [
          "initech:ListReports"
        ]
    }
  },
  "additionalProperties": false,
  "required": [
    "Region",
    "DatabaseName"
  ],
  "createOnlyProperties": [
    "/properties/BaseUrl",
    "/properties/DryRun",
    "/properties/DeploymentType",
    "/properties/PaymentMethod",
    "/properties/PaymentMethodId",
    "/properties/MemoryStorage",
    "/properties/Provider",
    "/properties/CloudAccountId",
    "/properties/Region",
    "/properties/MultipleAvailabilityZones",
    "/properties/PreferredAvailabilityZones",
    "/properties/DeploymentCIDR",
    "/properties/VpcId",
    "/properties/DatabaseName",
    "/properties/Protocol",
    "/properties/DatasetSizeInGb",
    "/properties/SupportOSSClusterApi",
    "/properties/DataPersistence",
    "/properties/Replication",
    "/properties/By",
    "/properties/Value",
    "/properties/LocalThroughputMeasurementRegion",
    "/properties/WriteOperationsPerSecond",
    "/properties/ReadOperationsPerSecond",
    "/properties/ModuleName",
    "/properties/ModuleParameters",
    "/properties/Quantity",
    "/properties/AverageItemSizeInBytes",
    "/properties/RespVersion",
    "/properties/QueryPerformanceFactor",
    "/properties/RedisVersion"
  ],
  "readOnlyProperties": [
    "/properties/SubscriptionID"
  ],
  "primaryIdentifier": ["/properties/SubscriptionID"]
}
