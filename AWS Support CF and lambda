AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Registers and sets a new default resource version, registers the account 
  as a publisher, and publishes the resource to the public registry with 
  enhanced stability handling.

Parameters:
  TypeName:
    Type: String
    Default: AllCloud::CloudFormation::ProDatabase
    Description: Name of the CloudFormation extension to publish

Resources:
  PublishedResource:
    Type: AWS::CloudFormation::PublicTypeVersion
    Properties:
      Type: RESOURCE
      TypeName: !Ref TypeName

  # Lambda function for monitoring publication status
  PublicationMonitorFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: python3.8
      Role: !GetAtt PublicationMonitorRole.Arn
      Code:
        ZipFile: |
          import boto3
          import cfnresponse

          def handler(event, context):
              cfn = boto3.client('cloudformation')
              try:
                  # Check type version publication status
                  response = cfn.describe_type_registration(
                      RegistrationToken=event['ResourceProperties']['PublicationResourceId']
                  )

                  # Log additional details
                  print(f"Publication Status: {response['ProgressStatus']}")
                  print(f"Description: {response.get('Description', 'No description')}")

                  # Determine success based on status
                  if response['ProgressStatus'] == 'COMPLETE':
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
                  else:
                      cfnresponse.send(event, context, cfnresponse.FAILED, {})
              except Exception as e:
                  print(f"Error monitoring publication: {str(e)}")
                  cfnresponse.send(event, context, cfnresponse.FAILED, {})

  # IAM Role for the Lambda function
  PublicationMonitorRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudFormationDescribeRegistration
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeTypeRegistration
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  # Custom resource to trigger the monitor function
  PublicationMonitor:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt PublicationMonitorFunction.Arn
      PublicationResourceId: !Ref PublishedResource

Outputs:
  PublicationStatus:
    Description: Status of the type publication
    Value: !Ref PublishedResource
